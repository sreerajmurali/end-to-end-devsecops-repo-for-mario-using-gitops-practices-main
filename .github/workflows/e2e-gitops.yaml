name: "Run SAST, Build and push supermario image, scan image, Update deployment and version text files"

on:
  push:
    branches:
      - master

jobs:

  sonarqube_sast_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build_push_supermario_docker_image:
    runs-on: ubuntu-latest
    needs: sonarqube_sast_scan

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Calculate Version
        id: version
        run: |
          VERSION=$(cat version.txt)
          NEW_VERSION=$((VERSION + 1))
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/supermariogitopsproject:${{ env.VERSION }} .
          docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/supermariogitopsproject:${{ env.VERSION }}
      - name: Debug DockerHub username
        run:echo "DockerHub Username: ${{ secrets.DOCKERHUB_USERNAME }}"


  run_container_image_scan_on_supermario_docker_image:
    runs-on: ubuntu-latest
    needs: build_push_supermario_docker_image

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Calculate Version
        id: version
        run: |
          VERSION=$(cat version.txt)
          NEW_VERSION=$((VERSION + 1))
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Get Docker Image from Docker Hub
        run: |
          docker pull docker.io/${{ secrets.DOCKERHUB_USERNAME }}/supermariogitopsproject:${{ env.VERSION }}
          docker save -o supermariolatestdockerimage.tar docker.io/${{ secrets.DOCKERHUB_USERNAME }}/supermariogitopsproject:${{ env.VERSION }}

      - name: Run Trivy vulnerability scanner 
        uses: aquasecurity/trivy-action@master
        # continue-on-error: true
        with:
          image-ref: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/supermariogitopsproject:${{ env.VERSION }}
          exit-code: '0'
          severity: 'CRITICAL,HIGH'

  update_k8s_yaml_version_file_with_latest_image_tag:
    runs-on: ubuntu-latest
    needs: run_container_image_scan_on_supermario_docker_image

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Calculate Version
        id: version
        run: |
          VERSION=$(cat version.txt)
          NEW_VERSION=$((VERSION + 1))
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Set Git Config
        run: |
           git config --global user.email "${{ secrets.GIT_EMAIL}}"
           git config --global user.name "${{ secrets.GIT_USERNAME}}"

      - name: Update Deployment YAML
        run: |
          git pull
          sed -i "s|image: .*/supermariogitopsproject:.*$|image: ${{ secrets.DOCKERHUB_USERNAME }}/supermariogitopsproject:${{ env.VERSION }}|" deployment.yaml
          echo ${{ env.VERSION }} > version.txt
          CURRENT_VERSION=$(cat version.txt)
          git add deployment.yaml version.txt
          git commit -m "Updated deployment yaml and version txt file with supermario image tag to ${CURRENT_VERSION}"
          git push
